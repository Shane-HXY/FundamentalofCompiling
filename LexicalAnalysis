#include <iostream>
#include <fstream>
#include <cstring>
#include <cstdio>
#include <iomanip>
using namespace std;

void pretreatment_annotation(FILE *A, FILE *B) {
	char ch;
	if ((A=fopen("input.txt", "r+")) == NULL)
		cout<<"input file not readable!"<<endl;
	if ((B=fopen("medium1.txt", "w+")) == NULL)
		cout<<"medium file not writable!"<<endl;
	ch = fgetc(A);
	while (!feof(A)) {
		if (ch == '/') {
			ch = fgetc(A);
			if (ch == '/') {
				while (fgetc(A) != '\n');
				fputc(' ', B);
				ch = fgetc(A);
			}
			else if (ch == '*') {
				while ((ch = fgetc(A)) != '*');
				while ((ch = fgetc(A)) != '/');
				ch = fgetc(A);
				fputc(ch, B);
				ch = fgetc(A);
			}
			else {
				fputc('/', B);
				fputc(ch, B);
				ch = fgetc(A);
			}
		}
		else {
			fputc(ch, B);
			ch = fgetc(A);
		}
	}
	fclose(A);
	fclose(B);
}

void pretreatment_blank(FILE *A, FILE *B) {
	char ch;
	if ((A=fopen("medium2.txt", "r+")) == NULL)
		cout<<"medium2 file not readable!"<<endl;
	if ((B=fopen("medium.txt", "w+")) == NULL)
		cout<<"medium file not writable!"<<endl;
	ch = fgetc(A);
	while (!feof(A)) {
		if (ch != ' ') 
			fputc(ch, B);
		else {
			fputc(ch, B);
			while ((ch = fgetc(A)) != EOF) {
				if (ch != ' ') {
					fputc(ch, B);
					break;
				}
			}
		}
		ch = fgetc(A);
	}
	fclose(A);
	fclose(B);
	//remove(*A);
}

void pretreatment_tab(FILE *A, FILE *B) {
	char ch;
	if ((A=fopen("medium1.txt","r+")) == NULL)
		cout<<"cannot open medium1.txt"<<endl;
	if ((B=fopen("medium2.txt","w+")) == NULL)
		cout<<"cannot open medium2.txt"<<endl;
	while ((ch = fgetc(A)) != EOF) {
		if (ch != '\n' && ch != '\r' && ch != '\t') {
			fputc(ch, B);
		}
		else {
			fputc(' ', B);
		}
	}
	fclose(A);
	fclose(B);
	//remove(*A);
}
void pretreatment(FILE *A, FILE *B) {
	pretreatment_annotation(A, B);
	pretreatment_tab(A, B);
	pretreatment_blank(A, B);
}


void Scanning() {
	FILE *A, *B;
	if ((A = fopen("medium.txt", "r+")) == NULL)
		cout<<"cannot open medium.txt"<<endl;
	if ((B = fopen("output.txt", "w+")) == NULL)
		cout<<"cannot open output.txt"<<endl;
	char ch;
	char word[1000] = "\0";
	char *rwtab[44] = {"#", "main", "if", "then", "while", "do", "static", "int", "double", "struct", "break", "else", "long",
	 "switch", "case", "typedef", "char", "return", "const", "float", "short", "continue","for", "void", "sizeof", "ID", "NUM",
	  "+", "-", "*", "/", ":", ":=", "<", "<>", "<=", ">", ">=", "=", "default", "do", ";", "(", ")"};
	cout<<"Token"<<"\t\t"<<"Syn"<<endl;
	fputs("Token", B);
	fputs("\t\t", B);
	fputs("Syn", B);
	fputc('\n', B);
	ch = fgetc(A);
	while (ch != EOF) {
		if ((ch >= '0') && (ch <= '9')) {
			word[0] = ch;
			int i = 0;
			ch = fgetc(A);
			while ((ch >= '0') && (ch <= '9')) {
				word[++i] = ch;
				ch = fgetc(A);
			}
			fputs(word, B);
			fputs("\t\t", B);
			fputs("26", B);
			fputc('\n', B);
			cout<<word<<"\t\t"<<"26"<<endl;
			for (int j=0; j<1000; j++)
				word[j] = '\0';
		}
		else if (((ch >= 'A') && (ch <= 'Z')) || ((ch >= 'a') && (ch <= 'z')) || (ch == '_')) {
			word[0] = ch;
			int i = 0, flag = 0, k = 0;
			while ((((ch = fgetc(A)) >= 'A') && (ch <= 'Z')) || ((ch >= 'a') && (ch <= 'z')) || ((ch >= '0') && (ch <= '9')) || (ch == '_')) {
				word[++i] = ch;
			}
			for (k=0; k<44; k++) {
				if (strcmp(word, rwtab[k]) == 0) {
					flag = 1;
					break;
				}
			}
			if (flag == 1)
				k = 26;
			fputs(word, B);
			fputs("\t\t", B);
			fprintf(B, "%d", k);
			fputc('\n', B);
			cout<<word<<"\t\t"<<k<<endl;
			for (int j=0; j<1000; j++)
				word[j] = '\0';
		}
		else if (ch == ' ')
			ch = fgetc(A);
		else {
			word[0] = ch;
			int i = 0, flag = 0, l;
			for (int j=0; j<44; j++) {
				if (strcmp(word, rwtab[j]) == 0) {
					if (j == 31 || j == 36 || j == 33) {
						ch = fgetc(A);
						word[++i] = ch;
						if (strcmp(word, rwtab[32]) == 0)
							flag = 2;
						else if (strcmp(word, rwtab[37]) == 0)
							flag = 5;
						else if (strcmp(word, rwtab[34]) == 0)
							flag = 3;
						else if (strcmp(word, rwtab[35]) == 0)
							flag = 4;
						else {
							flag = 1;
							l = j;
							word[1] = '\0';
						}
					}
					else {
						flag = 6;
						l = j;
					}
				}
				if (flag != 0)
					break;
			}
			switch (flag) {
				case 6:
					cout<<word<<"\t\t"<<l<<endl;
					fputs(word, B);
					fputs("\t\t", B);
					fprintf(B, "%d", l);
					fputc('\n', B);
					break;
				case 1:
					cout<<word<<"\t\t"<<l<<endl;
					fputs(word, B);
					fputs("\t\t", B);
					fprintf(B, "%d", l);
					fputc('\n', B);
					break;
				case 2:
					cout<<word<<"\t\t32"<<endl;
					fputs(word, B);
					fputs("\t\t", B);
					fputs("32", B);
					fputc('\n', B);
					break;
				case 3:
					cout<<word<<"\t\t34"<<endl;
					fputs(word, B);
					fputs("\t\t", B);
					fputs("34", B);
					fputc('\n', B);
					break;
				case 4:
					cout<<word<<"\t\t35"<<endl;
					fputs(word, B);
					fputs("\t\t", B);
					fputs("35", B);
					fputc('\n', B);
					break;
				case 5:
					cout<<word<<"\t\t37"<<endl;
					fputs(word, B);
					fputs("\t\t", B);
					fputs("37", B);
					fputc('\n', B);
					break;
				default:
					cout<<word<<"\t\t"<<"string unrecognized"<<endl;
					fputs(word, B);
					fputs("\t\t", B);
					fputs("string unrecognized", B);
					fputc('\n', B);
					break;
			}
			if (flag != 1)ch = fgetc(A);
			for (int x=0;x<2; x++)
				word[x] = '\0';
		}
	}
	fclose(A);
	fclose(B);
}

int main() {
	FILE *p, *q;
	pretreatment(p, q);
	Scanning();
	return 0;
}
